USE GD2C2024
GO;

---------------------------------------- Eliminacion de tablas ----------------------------------------
IF OBJECT_ID('REINUS.Detalle_Factura','U') IS NOT NULL
    DROP TABLE REINUS.Detalle_Factura;

IF OBJECT_ID('REINUS.Concepto','U') IS NOT NULL
    DROP TABLE REINUS.Concepto;

IF OBJECT_ID('REINUS.Factura','U') IS NOT NULL
    DROP TABLE REINUS.Factura;

IF OBJECT_ID('REINUS.Pago','U') IS NOT NULL
    DROP TABLE REINUS.Pago;

IF OBJECT_ID('REINUS.MedioPago','U') IS NOT NULL
    DROP TABLE REINUS.MedioPago;

IF OBJECT_ID('REINUS.Detalle_Pago','U') IS NOT NULL
    DROP TABLE REINUS.Detalle_Pago;

IF OBJECT_ID('REINUS.Detalle_Venta','U') IS NOT NULL
    DROP TABLE REINUS.Detalle_Venta;

IF OBJECT_ID('REINUS.Venta','U') IS NOT NULL
    DROP TABLE REINUS.Venta;

IF OBJECT_ID('REINUS.Envio','U') IS NOT NULL
    DROP TABLE REINUS.Envio;

IF OBJECT_ID('REINUS.Tipo_Envio','U') IS NOT NULL
    DROP TABLE REINUS.Tipo_Envio;

IF OBJECT_ID('REINUS.Publicacion','U') IS NOT NULL
    DROP TABLE REINUS.Publicacion;

IF OBJECT_ID('REINUS.Producto','U') IS NOT NULL
    DROP TABLE REINUS.Producto;

IF OBJECT_ID('REINUS.Modelo','U') IS NOT NULL
    DROP TABLE REINUS.Modelo;

IF OBJECT_ID('REINUS.Marca','U') IS NOT NULL
    DROP TABLE REINUS.Marca;

IF OBJECT_ID('REINUS.Subrubro','U') IS NOT NULL
    DROP TABLE REINUS.Subrubro;

IF OBJECT_ID('REINUS.Rubro','U') IS NOT NULL
    DROP TABLE REINUS.Rubro;

IF OBJECT_ID('REINUS.Almacen','U') IS NOT NULL
    DROP TABLE REINUS.Almacen;

IF OBJECT_ID('REINUS.Domicilio','U') IS NOT NULL
    DROP TABLE REINUS.Domicilio;

IF OBJECT_ID('REINUS.Vendedor','U') IS NOT NULL
    DROP TABLE REINUS.Vendedor;

IF OBJECT_ID('REINUS.Cliente','U') IS NOT NULL
    DROP TABLE REINUS.Cliente;

IF OBJECT_ID('REINUS.Usuario','U') IS NOT NULL
    DROP TABLE REINUS.Usuario;

IF OBJECT_ID('REINUS.Localidad','U') IS NOT NULL
    DROP TABLE REINUS.Localidad;

IF OBJECT_ID('REINUS.Provincia','U') IS NOT NULL
    DROP TABLE REINUS.Provincia;

---------------------------------------- Eliminación del esquema ----------------------------------------
IF EXISTS (SELECT*FROM sys.schemas
WHERE name = 'REINUS')
BEGIN
EXEC('DROP SCHEMA REINUS')
PRINT 'Esquema borrado exitosamente'
END
ELSE
BEGIN
PRINT 'El esquema no existe'
end
GO

---------------------------------------- Creación del esquema ----------------------------------------
IF NOT EXISTS (SELECT*FROM sys.schemas
WHERE name = 'REINUS')
BEGIN
EXEC('CREATE SCHEMA REINUS')
PRINT 'Esquema creado exitosamente'
END
ELSE
BEGIN
PRINT 'El esquema ya esta creado'
end
GO

---------------------------------------- Creacion de las tablas ----------------------------------------
CREATE TABLE REINUS.Usuario (
ID_USUARIO INTEGER IDENTITY(1,1)  NOT NULL,
NOMBRE NVARCHAR(50), 
PASS NVARCHAR(50),
MAIL NVARCHAR(50),
FECHA_CREACION DATE
)

CREATE TABLE REINUS.Domicilio (
ID_DOMICILIO  INTEGER  IDENTITY(1,1) NOT NULL,
PISO DECIMAL(18,0),
DEPTO NVARCHAR(50),
CP NVARCHAR(50),
CALLE NVARCHAR(50),
NUM_CALLE INTEGER,
USUARIO_ID INTEGER,--FK
LOCALIDAD_ID INTEGER --FK
)

CREATE TABLE REINUS.Provincia(
ID_PROVINCIA  INTEGER IDENTITY(1,1) NOT NULL ,
NOMBRE NVARCHAR(50)
)

CREATE TABLE REINUS.Localidad (
ID_LOCALIDAD  INTEGER IDENTITY (1,1) NOT NULL ,
NOMBRE NVARCHAR(50),
ID_PROVINCIA INTEGER--FK
)

CREATE TABLE REINUS.Vendedor (
ID_VENDEDOR INTEGER  IDENTITY(1,1) NOT NULL,
RAZON_SOCIAL NVARCHAR(50), 
CUIT NVARCHAR(50) NOT NULL,
ID_USUARIO INTEGER --FK
)

CREATE TABLE  REINUS.Cliente (
ID_CLIENTE INTEGER IDENTITY(1,1) NOT NULL,
NOMBRE NVARCHAR(50), 
APELLIDO NVARCHAR(50),
FECHA_NAC DATE, 
DNI DECIMAL(18,0),
ID_USUARIO INTEGER --FK
)

CREATE TABLE  REINUS.Almacen (
ID_ALMACEN INTEGER IDENTITY(1,1) NOT NULL,
CODIGO DECIMAL(18,0), 
DOMICILIO_ID INTEGER --FK
)

CREATE TABLE REINUS.Publicacion (
ID_PUBLICACION INT IDENTITY(1,1) NOT NULL,
CODIGO DECIMAL(18,0),
FECHA DATE, 
FECHA_V DATE,
DESCRIPCION NVARCHAR(255),
PRODUCTO_ID INTEGER  NOT NULL,
STOCK DECIMAL(18,0),
PRECIO INTEGER DEFAULT 0,
VENDEDOR_ID INTEGER NOT NULL ,--FK
COSTO INTEGER ,
ALMACEN_ID INTEGER NOT NULL,
PORC_VENTA DECIMAL(18,2)
)
 
CREATE TABLE REINUS.Detalle_Factura 
(
FACTURA_ID INTEGER NOT NULL ,--FK
CONCEPTO_ID INTEGER NOT NULL,--FK
PRECIO DECIMAL(18,2),
CANTIDAD DECIMAL(18,0),
SUBTOTAL DECIMAL(18,2),
PUBLICACION_ID INTEGER NOT NULL
)

CREATE TABLE  REINUS.Concepto (
CONCEPTO_ID INTEGER IDENTITY(1,1) NOT NULL,
FACTURA_DET_TIPO NVARCHAR(50)
)

CREATE TABLE REINUS.Factura (
FACTURA_ID INTEGER IDENTITY(1,1)NOT NULL,
FACTURA_NUMERO DECIMAL(18,0),
USUARIO_ID INTEGER,
FECHA DATE,
TOTAL DECIMAL(18,2)
)

CREATE TABLE REINUS.Producto (
ID_PRODUCTO INTEGER IDENTITY(1,1) NOT NULL,
CODIGO NVARCHAR(50),
PRECIO DECIMAL(18,2),
DESCRIPCION NVARCHAR(50),
ID_MODELO INTEGER NOT NULL,--FK
SUBRUBRO_ID INTEGER NOT NULL ,--FK
ID_MARCA INTEGER NOT NULL --FK
)

CREATE TABLE REINUS.Marca (--CREADA
ID_MARCA INTEGER IDENTITY (1,1) NOT NULL ,
MARCA NVARCHAR(50)
)

CREATE TABLE REINUS.Modelo (--CREADA
ID_MODELO INTEGER  IDENTITY(1,1)NOT NULL  , 
DESCRIPCION NVARCHAR(50),
CODIGO DECIMAL(18,2)
)

CREATE TABLE REINUS.Subrubro (
ID_SUBRUBRO INTEGER IDENTITY(1,1) NOT NULL,
RUBRO_ID INTEGER NOT NULL ,--FK
PRODUCTO_SUB_RUBRO NVARCHAR(50)
)

CREATE TABLE REINUS.Rubro (--CRAEDA CON EXITO
ID_RUBRO INTEGER IDENTITY(1,1) NOT NULL,
PRODUCTO_RUBRO_DESCRIPCION  NVARCHAR(50)
)

CREATE TABLE REINUS.MedioPago (
ID_MEDIO_PAGO INTEGER IDENTITY(1,1) NOT NULL, 
MEDIO_PAGO NVARCHAR(50),
TIPO_MEDIO_PAGO NVARCHAR(50)
)

CREATE TABLE REINUS.Pago (
PAGO_ID INTEGER IDENTITY (1,1) NOT NULL,
FECHA DATE, 
IMPORTE DECIMAL(18,2),
VENTA_ID INTEGER NOT NULL, --FK
MEDIO_PAGO_ID INTEGER NOT NULL,--FK
DETALLE_PAGO_ID INTEGER NOT NULL--FK
)

CREATE TABLE REINUS.Detalle_Pago (
ID_DETALLE_PAGO INTEGER IDENTITY(1,1) NOT NULL,
NRO_TARJETA NVARCHAR(50),
FECHA_VENC_TARJETA DATE,
CANT_CUOTAS DECIMAL(18,0)
)

CREATE TABLE REINUS.Venta (
ID_VENTA INTEGER IDENTITY (1,1) NOT NULL,
CODIGO DECIMAL(18,0),
FECHA_HORA DATETIME,
TOTAL DECIMAL(18,2),
CLIENTE_ID INTEGER NOT NULL,--FK
ENVIO_ID INTEGER NOT NULL--FK
)

CREATE TABLE REINUS.Detalle_Venta (
VENTA_DET_ID INTEGER IDENTITY(1,1) NOT NULL,
CANT DECIMAL (18,0),
PRECIO DECIMAL(18,2),
SUBTOTAL DECIMAL(18,2),
PUBLICACION_ID INTEGER NOT NULL,
VENTA_ID INTEGER NOT NULL
)

CREATE TABLE REINUS.Envio
(
ENVIO_ID INTEGER IDENTITY(1,1) NOT NULL,
FECHA_PROGRAMADA DATE,
DOMICILIO_ID INTEGER NOT NULL,--FK
HORA_INICIO DECIMAL(18,0),
HORA_FIN_INICIO DECIMAL(18,0),
COSTO DECIMAL(18,2),
FECHA_ENTREGA DATETIME,
TIPO_ENVIO_ID INTEGER NOT NULL,--FK,
ENTREGA BIT
)

CREATE TABLE REINUS.Tipo_Envio
(
TIPO_ENVIO_ID INTEGER IDENTITY(1,1) NOT NULL,
TIPO NVARCHAR(50)
)

---------------------------------------- Creación de primary keys ----------------------------------------
ALTER TABLE REINUS.Detalle_Venta  -- HECHA
ADD CONSTRAINT PK_Detalle_Venta PRIMARY KEY (VENTA_DET_ID);

ALTER TABLE REINUS.Venta
ADD CONSTRAINT PK_Venta PRIMARY KEY (ID_VENTA); --HECHA

ALTER TABLE REINUS.Cliente
ADD CONSTRAINT PK_Cliente PRIMARY KEY (ID_CLIENTE);--HECHA

ALTER TABLE REINUS.Usuario
ADD CONSTRAINT PK_Usuario PRIMARY KEY (ID_USUARIO);--HECHA

ALTER TABLE REINUS.Vendedor
ADD CONSTRAINT PK_Vendedor PRIMARY KEY (ID_VENDEDOR);--HECHA

ALTER TABLE REINUS.Domicilio
ADD CONSTRAINT PK_Domicilio PRIMARY KEY (ID_DOMICILIO);--HECHA

ALTER TABLE REINUS.Almacen
ADD CONSTRAINT PK_Almacen PRIMARY KEY (ID_ALMACEN);--HECHA

ALTER TABLE REINUS.Detalle_Factura
ADD CONSTRAINT PK_Detalle_Factura PRIMARY KEY (FACTURA_ID, CONCEPTO_ID);--HECHA

ALTER TABLE REINUS.Publicacion --HECHA
ADD CONSTRAINT PK_Publicacion PRIMARY KEY (ID_PUBLICACION);

ALTER TABLE REINUS.Factura
ADD CONSTRAINT PK_Factura PRIMARY KEY (FACTURA_ID);--HECHA

ALTER TABLE REINUS.Subrubro
ADD CONSTRAINT PK_Subrubro PRIMARY KEY (ID_SUBRUBRO);--HECHA

ALTER TABLE REINUS.Rubro
ADD CONSTRAINT PK_Rubro PRIMARY KEY (ID_RUBRO);--HECHA

ALTER TABLE REINUS.Producto
ADD CONSTRAINT PK_Producto PRIMARY KEY (ID_PRODUCTO);--HECHA

ALTER TABLE REINUS.Envio
ADD CONSTRAINT PK_Envio PRIMARY KEY (ENVIO_ID);--HECHA 

ALTER TABLE REINUS.Concepto
ADD CONSTRAINT PK_Concepto PRIMARY KEY (CONCEPTO_ID);--HECHA  


ALTER TABLE REINUS.Marca
ADD CONSTRAINT PK_Marca PRIMARY KEY (ID_MARCA);--HECHA  

ALTER TABLE REINUS.Modelo
ADD CONSTRAINT PK_Modelo PRIMARY KEY (ID_MODELO);--HECHA  

ALTER TABLE REINUS.Tipo_Envio
ADD CONSTRAINT PK_Tipo_Envio PRIMARY KEY (TIPO_ENVIO_ID);--HECHA  

ALTER TABLE REINUS.MedioPago
ADD CONSTRAINT PK_MedioPago PRIMARY KEY (ID_MEDIO_PAGO);--HECHA

ALTER TABLE REINUS.Pago
ADD CONSTRAINT PK_Pago PRIMARY KEY (PAGO_ID);--HECHA

ALTER TABLE REINUS.Detalle_Pago
ADD CONSTRAINT PK_Detalle_Pago PRIMARY KEY (ID_DETALLE_PAGO);--HECHA 

ALTER TABLE REINUS.Localidad
ADD CONSTRAINT PK_Localidad PRIMARY KEY (ID_LOCALIDAD);--HECHA 

ALTER TABLE REINUS.Provincia
ADD CONSTRAINT PK_Provincia PRIMARY KEY (ID_PROVINCIA);--HECHA 

---------------------------------------- Creación de foreign keys ----------------------------------------
ALTER TABLE REINUS.Cliente
ADD CONSTRAINT FK_Usuario_Cliente
FOREIGN KEY (ID_USUARIO) 
REFERENCES REINUS.Usuario(ID_USUARIO);

ALTER TABLE REINUS.Vendedor
ADD CONSTRAINT FK_Vendedor_Cliente
FOREIGN KEY (ID_USUARIO) 
REFERENCES REINUS.Usuario(ID_USUARIO);

ALTER TABLE REINUS.Domicilio
ADD CONSTRAINT FK_Usuario_Domicilio
FOREIGN KEY (USUARIO_ID) 
REFERENCES REINUS.Usuario(ID_USUARIO);

ALTER TABLE REINUS.Domicilio
ADD CONSTRAINT FK_Domicilio_Localidad
FOREIGN KEY (LOCALIDAD_ID) 
REFERENCES REINUS.Localidad(ID_LOCALIDAD);

ALTER TABLE REINUS.Localidad
ADD CONSTRAINT FK_Localidad_Provincia
FOREIGN KEY (ID_PROVINCIA) 
REFERENCES REINUS.Provincia(ID_PROVINCIA);

ALTER TABLE REINUS.Almacen
ADD CONSTRAINT FK_Almacen_Direccion
FOREIGN KEY (DOMICILIO_ID) 
REFERENCES REINUS.Domicilio(ID_DOMICILIO);

ALTER TABLE REINUS.Publicacion
ADD CONSTRAINT FK_Publicacion_Producto
FOREIGN KEY (PRODUCTO_ID) 
REFERENCES REINUS.Producto(ID_PRODUCTO);

ALTER TABLE REINUS.Publicacion
ADD CONSTRAINT FK_Publicacion_Vendedor
FOREIGN KEY (VENDEDOR_ID) 
REFERENCES REINUS.Vendedor(ID_VENDEDOR);

ALTER TABLE REINUS.Publicacion
ADD CONSTRAINT FK_Publicacion_Almacen
FOREIGN KEY (ALMACEN_ID) 
REFERENCES REINUS.Almacen(ID_ALMACEN);

ALTER TABLE REINUS.Subrubro
ADD CONSTRAINT FK_Subrubro_Rubro
FOREIGN KEY (RUBRO_ID) 
REFERENCES REINUS.Rubro(ID_RUBRO);

--PRODUCTO
ALTER TABLE REINUS.Producto
ADD CONSTRAINT FK_Producto_Modelo
FOREIGN KEY (ID_MODELO) 
REFERENCES REINUS.Modelo(ID_MODELO);

ALTER TABLE REINUS.Producto
ADD CONSTRAINT FK_Producto_Marca
FOREIGN KEY (ID_MARCA) 
REFERENCES REINUS.Marca(ID_MARCA);

ALTER TABLE REINUS.Producto
ADD CONSTRAINT FK_Producto_Subrubro
FOREIGN KEY (SUBRUBRO_ID) 
REFERENCES REINUS.Subrubro(ID_SUBRUBRO);

ALTER TABLE REINUS.Pago
ADD CONSTRAINT FK_Pago_MedioPago
FOREIGN KEY (MEDIO_PAGO_ID) 
REFERENCES REINUS.MedioPago(ID_MEDIO_PAGO);

ALTER TABLE REINUS.Pago
ADD CONSTRAINT FK_Pago_DetallePago
FOREIGN KEY (DETALLE_PAGO_ID) 
REFERENCES REINUS.Detalle_Pago(ID_DETALLE_PAGO);

ALTER TABLE REINUS.Pago
ADD CONSTRAINT FK_Pago_Venta
FOREIGN KEY (VENTA_ID) 
REFERENCES REINUS.Venta(ID_VENTA);

ALTER TABLE REINUS.Venta
ADD CONSTRAINT FK_Venta_Cliente
FOREIGN KEY (CLIENTE_ID) 
REFERENCES REINUS.Cliente(ID_CLIENTE);

ALTER TABLE REINUS.Venta
ADD CONSTRAINT FK_Venta_Envio
FOREIGN KEY (ENVIO_ID) 
REFERENCES REINUS.Envio(ENVIO_ID);

ALTER TABLE REINUS.Envio
ADD CONSTRAINT FK_Envio_Domicilio
FOREIGN KEY (DOMICILIO_ID) 
REFERENCES REINUS.Domicilio(ID_DOMICILIO);

ALTER TABLE REINUS.Envio
ADD CONSTRAINT FK_Envio_TipoEnvio
FOREIGN KEY (TIPO_ENVIO_ID) 
REFERENCES REINUS.Tipo_Envio(TIPO_ENVIO_ID);

ALTER TABLE REINUS.Detalle_Venta
ADD CONSTRAINT FK_Detalle_Venta_Venta
FOREIGN KEY (VENTA_ID) 
REFERENCES REINUS.Venta(ID_VENTA);

ALTER TABLE REINUS.Detalle_Venta
ADD CONSTRAINT FK_Detalle_Venta_Publicacion
FOREIGN KEY (PUBLICACION_ID) 
REFERENCES REINUS.Publicacion(ID_PUBLICACION);

ALTER TABLE REINUS.Factura
ADD CONSTRAINT FK_Factura_Usuario
FOREIGN KEY(USUARIO_ID)
REFERENCES REINUS.Usuario(ID_USUARIO);

------FUNCIONARIAN COMO PK PARA DETALLE FACTURA
ALTER TABLE REINUS.Detalle_Factura
ADD CONSTRAINT FK_Detalle_Factura_Factura
FOREIGN KEY(FACTURA_ID)
REFERENCES REINUS.Factura(FACTURA_ID);

ALTER TABLE REINUS.Detalle_Factura
ADD CONSTRAINT FK_Detalle_Factura_Concepto
FOREIGN KEY (CONCEPTO_ID)
REFERENCES REINUS.Concepto(CONCEPTO_ID);


---------------------------------------- Procedures para la migracion ----------------------------------------

---------------------------------------- MIGRACION PROVINCIA ----------------------------------------
GO

CREATE PROCEDURE REINUS.migrar_provincia AS 
BEGIN 
INSERT INTO REINUS.Provincia(NOMBRE)
SELECT DISTINCT VEN_USUARIO_DOMICILIO_PROVINCIA  AS NOMBRE
FROM gd_esquema.Maestra
WHERE VEN_USUARIO_DOMICILIO_PROVINCIA IS NOT NULL

UNION

SELECT DISTINCT CLI_USUARIO_DOMICILIO_PROVINCIA
FROM gd_esquema.Maestra
WHERE CLI_USUARIO_DOMICILIO_PROVINCIA IS NOT NULL

UNION

SELECT DISTINCT ALMACEN_PROVINCIA
FROM gd_esquema.Maestra
WHERE ALMACEN_PROVINCIA IS NOT NULL;
END
GO

---------------------------------------- MIGRACION DE LOCALIDAD ----------------------------------------
CREATE PROCEDURE REINUS.migrar_Localidad AS 
BEGIN 
INSERT INTO REINUS.Localidad(NOMBRE,ID_PROVINCIA)
SELECT DISTINCT VEN_USUARIO_DOMICILIO_LOCALIDAD  AS NOMBRE, ID_PROVINCIA
FROM gd_esquema.Maestra
JOIN REINUS.Provincia on NOMBRE = VEN_USUARIO_DOMICILIO_PROVINCIA
WHERE VEN_USUARIO_DOMICILIO_LOCALIDAD IS NOT NULL

UNION

SELECT DISTINCT CLI_USUARIO_DOMICILIO_LOCALIDAD AS NOMBRE, ID_PROVINCIA
FROM gd_esquema.Maestra
join REINUS.Provincia on NOMBRE = CLI_USUARIO_DOMICILIO_PROVINCIA
WHERE CLI_USUARIO_DOMICILIO_PROVINCIA  IS NOT NULL

UNION
SELECT DISTINCT ALMACEN_Localidad AS NOMBRE, ID_PROVINCIA
FROM gd_esquema.Maestra
join REINUS.Provincia on NOMBRE = ALMACEN_PROVINCIA
WHERE ALMACEN_PROVINCIA  IS NOT NULL
END;
GO

 ---------------------------------------- MIGRACION DOMICILIO ----------------------------------------
CREATE PROCEDURE REINUS.Migrar_Domicilio
AS
BEGIN
INSERT INTO REINUS.Domicilio (CALLE, NUM_CALLE, PISO, DEPTO, CP,LOCALIDAD_ID, USUARIO_ID)
SELECT DISTINCT
    domicilio.calle,
	domicilio.numero_calle,
	domicilio.piso,
	domicilio.depto,
	domicilio.codigo_postal,
	localidad.ID_LOCALIDAD,
	usuario.ID_USUARIO
FROM (
	SELECT DISTINCT
		m.CLI_USUARIO_DOMICILIO_CALLE as calle,
		m.CLI_USUARIO_DOMICILIO_NRO_CALLE as numero_calle,
		m.CLI_USUARIO_DOMICILIO_PISO as piso,
		m.CLI_USUARIO_DOMICILIO_DEPTO as depto,
		m.CLI_USUARIO_DOMICILIO_CP as codigo_postal,
		m.CLI_USUARIO_DOMICILIO_LOCALIDAD as localidad,
		m.CLI_USUARIO_DOMICILIO_PROVINCIA as provincia,
		m.CLI_USUARIO_NOMBRE as username,
		m.CLI_USUARIO_PASS as pass,
		m.CLI_USUARIO_FECHA_CREACION as fecha_creacion,
		m.CLIENTE_MAIL as mail
	FROM gd_esquema.Maestra m
	WHERE m.CLI_USUARIO_DOMICILIO_CALLE IS NOT NULL 
	
	UNION
	
	SELECT DISTINCT
		m.VEN_USUARIO_DOMICILIO_CALLE as calle,
		m.VEN_USUARIO_DOMICILIO_NRO_CALLE as numero_calle,
		m.VEN_USUARIO_DOMICILIO_PISO as piso,
		m.VEN_USUARIO_DOMICILIO_DEPTO as depto,
		m.VEN_USUARIO_DOMICILIO_CP as codigo_postal,
		m.VEN_USUARIO_DOMICILIO_LOCALIDAD as localidad,
		m.VEN_USUARIO_DOMICILIO_PROVINCIA as provincia,
		m.VEN_USUARIO_NOMBRE as username,
		m.VEN_USUARIO_PASS as pass,
		m.VEN_USUARIO_FECHA_CREACION as fecha_creacion,
		m.VENDEDOR_MAIL as mail
	FROM gd_esquema.Maestra m
	WHERE m.VEN_USUARIO_DOMICILIO_CALLE IS NOT NULL
	
	UNION ALL
	SELECT DISTINCT
		m.ALMACEN_CALLE as calle,
		m.ALMACEN_NRO_CALLE as numero_calle,
		NULL as piso,
		NULL as depto,
		NULL as codigo_postal,
		ALMACEN_Localidad as localidad,
		ALMACEN_PROVINCIA as provincia,
		NULL as username,
		NULL as pass,
		NULL as fecha_creacion,
		NULL as mail
	FROM gd_esquema.Maestra m
	WHERE m.ALMACEN_CALLE IS NOT NULL 
) domicilio
JOIN REINUS.Provincia provincia ON provincia.nombre = domicilio.provincia
JOIN REINUS.Localidad localidad ON localidad.nombre = domicilio.localidad AND localidad.ID_PROVINCIA = provincia.ID_PROVINCIA
LEFT JOIN REINUS.Usuario usuario ON usuario.NOMBRE = domicilio.username AND usuario.pass = domicilio.pass AND usuario.fecha_creacion = domicilio.fecha_creacion and usuario.MAIL = domicilio.mail
ORDER BY 1;
END
GO

---------------------------------------- MIGRAR CLIENTE ----------------------------------------
CREATE PROCEDURE REINUS.migrarCliente
AS 
BEGIN
INSERT INTO REINUS.Cliente (NOMBRE, APELLIDO, FECHA_NAC, DNI, ID_USUARIO)
    SELECT DISTINCT
        cliente.nombre,
        cliente.apellido,
        cliente.fecha_nacimiento,
        cliente.dni,
        usuario.ID_USUARIO
    FROM (
        SELECT DISTINCT
            m.CLIENTE_NOMBRE as nombre,
            m.CLIENTE_APELLIDO as apellido,
            m.CLIENTE_FECHA_NAC as fecha_nacimiento,
            m.CLIENTE_DNI as dni,
            m.CLI_USUARIO_NOMBRE as username,
            m.CLI_USUARIO_PASS as pass,
            m.CLI_USUARIO_FECHA_CREACION as fecha_creacion,
			m.CLIENTE_MAIL as mail
        FROM gd_esquema.Maestra m
        WHERE m.CLIENTE_NOMBRE IS NOT NULL
    ) cliente
    JOIN REINUS.Usuario usuario ON usuario.NOMBRE = cliente.username AND usuario.pass = cliente.pass AND usuario.fecha_creacion = cliente.fecha_creacion and usuario.MAIL = cliente.mail
	ORDER BY usuario.ID_USUARIO
END 
GO

---------------------------------------- MIGRAR VENDEDOR ----------------------------------------
CREATE PROCEDURE REINUS.Migrar_Vendedor
AS
BEGIN
    INSERT INTO REINUS.Vendedor (RAZON_SOCIAL, CUIT, ID_USUARIO)
    SELECT
        vendedor.razon_social,
        vendedor.cuit,
        usuario.ID_USUARIO
    FROM (
        SELECT DISTINCT
            m.VENDEDOR_RAZON_SOCIAL as razon_social,
            m.VENDEDOR_CUIT as cuit,
            m.VEN_USUARIO_NOMBRE as username,
            m.VEN_USUARIO_PASS as pass,
            m.VEN_USUARIO_FECHA_CREACION as fecha_creacion
        FROM gd_esquema.Maestra m
        WHERE m.VENDEDOR_RAZON_SOCIAL IS NOT NULL
    ) vendedor
    JOIN REINUS.Usuario usuario ON usuario.NOMBRE = vendedor.username AND usuario.pass = vendedor.pass AND usuario.fecha_creacion = vendedor.fecha_creacion
ORDER BY usuario.ID_USUARIO	
END
GO

---------------------------------------- MIGRAR USUARIO ----------------------------------------
CREATE PROCEDURE REINUS.migrar_usuarios
AS
BEGIN
INSERT INTO REINUS.Usuario (NOMBRE, PASS, FECHA_CREACION, MAIL)
    -- Migración de vendedores
    SELECT DISTINCT
        M.VEN_USUARIO_NOMBRE AS NOMBRE,
        M.VEN_USUARIO_PASS AS PASS,
        M.VEN_USUARIO_FECHA_CREACION AS FECHA_CREACION,
		M.VENDEDOR_MAIL AS MAIL
		
    FROM GD2C2024.gd_esquema.Maestra M
    WHERE M.VEN_USUARIO_NOMBRE IS NOT NULL
      AND M.VEN_USUARIO_PASS IS NOT NULL
	  AND M.VEN_USUARIO_FECHA_CREACION IS NOT NULL
	  AND M.VENDEDOR_MAIL IS NOT NULL

    UNION

    SELECT DISTINCT
        M.CLI_USUARIO_NOMBRE AS NOMBRE,
        M.CLI_USUARIO_PASS AS PASS,
        M.CLI_USUARIO_FECHA_CREACION AS FECHA_CREACION,
		M.CLIENTE_MAIL AS MAIL
        
    FROM GD2C2024.gd_esquema.Maestra M
     WHERE M.CLI_USUARIO_NOMBRE IS NOT NULL
      AND M.CLI_USUARIO_PASS IS NOT NULL
	  AND M.CLI_USUARIO_FECHA_CREACION IS NOT NULL
	  AND M.CLIENTE_MAIL IS NOT NULL
END;
GO

---------------------------------------- MIGRACION DE ALMACEN ----------------------------------------
CREATE PROCEDURE REINUS.migrar_almacen AS
BEGIN
INSERT INTO REINUS.Almacen(CODIGO, DOMICILIO_ID)
SELECT DISTINCT 
    M.ALMACEN_CODIGO AS CODIGO,
    D.ID_DOMICILIO
FROM GD2C2024.gd_esquema.Maestra M
JOIN REINUS.Provincia P ON M.ALMACEN_PROVINCIA = P.NOMBRE
JOIN REINUS.Localidad L ON M.ALMACEN_Localidad = L.NOMBRE AND L.ID_PROVINCIA = P.ID_PROVINCIA
JOIN REINUS.Domicilio D ON M.ALMACEN_CALLE = D.CALLE AND M.ALMACEN_NRO_CALLE = D.NUM_CALLE AND D.LOCALIDAD_ID = L.ID_LOCALIDAD
WHERE M.ALMACEN_CODIGO IS NOT NULL
END 
GO

---------------------------------------- MIGRACION DE CONCEPTO ----------------------------------------
CREATE PROCEDURE REINUS.migrarConcepto
AS
BEGIN
INSERT INTO REINUS.Concepto(FACTURA_DET_TIPO)
SELECT DISTINCT M.FACTURA_DET_TIPO
FROM gd_esquema.Maestra M
WHERE FACTURA_DET_TIPO IS NOT NULL
END 
GO

---------------------------------------- MIGRACION DE MARCA ----------------------------------------
CREATE PROCEDURE REINUS.migrar_marca AS
BEGIN 
INSERT INTO REINUS.Marca
SELECT DISTINCT PRODUCTO_MARCA  
FROM gd_esquema.Maestra
WHERE PRODUCTO_MARCA IS NOT NULL
END ;
GO

---------------------------------------- MIGRACION DE MODELO ----------------------------------------
CREATE PROCEDURE REINUS.migrar_modelo
AS
BEGIN
INSERT INTO REINUS.Modelo
SELECT DISTINCT m.PRODUCTO_MOD_DESCRIPCION,m.PRODUCTO_MOD_CODIGO  
FROM gd_esquema.Maestra m
WHERE m.PRODUCTO_MOD_DESCRIPCION IS NOT NULL AND m.PRODUCTO_MOD_CODIGO IS NOT NULL
END ;
GO

---------------------------------------- MIGRACION DE RUBRO ----------------------------------------
CREATE PROCEDURE REINUS.migrar_rubro AS
BEGIN
INSERT INTO REINUS.Rubro(PRODUCTO_RUBRO_DESCRIPCION)
SELECT DISTINCT PRODUCTO_RUBRO_DESCRIPCION  AS PRODUCTO_RUBRO_DESCRIPCION
FROM gd_esquema.Maestra
WHERE PRODUCTO_RUBRO_DESCRIPCION IS NOT NULL
END
GO

---------------------------------------- MIGRACION DE SUBRUBRO ----------------------------------------
CREATE PROCEDURE REINUS.migrar_subrubro AS
BEGIN
INSERT INTO REINUS.Subrubro(PRODUCTO_SUB_RUBRO, RUBRO_ID)
SELECT DISTINCT PRODUCTO_SUB_RUBRO AS PRODUCTO_SUB_RUBRO, ID_RUBRO
FROM gd_esquema.Maestra M
JOIN REINUS.Rubro R on M.PRODUCTO_RUBRO_DESCRIPCION = R.PRODUCTO_RUBRO_DESCRIPCION --creo que le psuimos en si el mismo nombre
WHERE PRODUCTO_SUB_RUBRO IS NOT NULL
END
GO

---------------------------------------- MIGRACION DE PRODUCTO ---------------------------------------- 
CREATE PROCEDURE REINUS.migrar_producto
AS
BEGIN
    INSERT INTO REINUS.Producto(CODIGO, ID_MODELO, PRECIO,DESCRIPCION, SUBRUBRO_ID, ID_MARCA)
    SELECT M.PRODUCTO_CODIGO,
           Mo.ID_MODELO,
           M.PRODUCTO_PRECIO,
		   M.PRODUCTO_DESCRIPCION,
           S.ID_SUBRUBRO,
           Ma.ID_MARCA
    FROM gd_esquema.Maestra M
	join REINUS.Rubro R ON M.PRODUCTO_RUBRO_DESCRIPCION = R.PRODUCTO_RUBRO_DESCRIPCION
    INNER JOIN REINUS.Subrubro S ON M.PRODUCTO_SUB_RUBRO = S.PRODUCTO_SUB_RUBRO AND S.RUBRO_ID = R.ID_RUBRO
    INNER JOIN REINUS.Modelo Mo ON M.PRODUCTO_MOD_DESCRIPCION = Mo.DESCRIPCION 
    INNER JOIN REINUS.Marca Ma ON M.PRODUCTO_MARCA = Ma.MARCA
    WHERE M.PRODUCTO_CODIGO IS NOT NULL
      AND M.PRODUCTO_PRECIO IS NOT NULL
	GROUP BY M.PRODUCTO_CODIGO, Mo.ID_MODELO, M.PRODUCTO_PRECIO, S.ID_SUBRUBRO, Ma.ID_MARCA,M.PRODUCTO_DESCRIPCION ;
END;
GO

---------------------------------------- MIGRACION DE PUBLICACION ----------------------------------------
CREATE PROCEDURE REINUS.migrarPublicacion
AS 
BEGIN
    INSERT INTO REINUS.Publicacion (CODIGO, FECHA, FECHA_V, DESCRIPCION, PRODUCTO_ID,
        STOCK, PRECIO, VENDEDOR_ID, COSTO, ALMACEN_ID, PORC_VENTA)
    SELECT DISTINCT
        M.PUBLICACION_CODIGO,
        M.PUBLICACION_FECHA,
        M.PUBLICACION_FECHA_V,
        M.PUBLICACION_DESCRIPCION,
        P.ID_PRODUCTO AS PRODUCTO_ID,
        M.PUBLICACION_STOCK,
        M.PUBLICACION_PRECIO,
		V.ID_VENDEDOR AS VENDEDOR_ID,
        M.PUBLICACION_COSTO,
        A.ID_ALMACEN AS ALMACEN_ID,
        M.PUBLICACION_PORC_VENTA
    FROM 
        gd_esquema.Maestra M
        
        JOIN REINUS.Almacen A ON A.CODIGO = M.ALMACEN_CODIGO
		JOIN REINUS.Vendedor V ON V.RAZON_SOCIAL = M.VENDEDOR_RAZON_SOCIAL AND V.CUIT = M.VENDEDOR_CUIT 
		JOIN REINUS.Rubro R ON R.PRODUCTO_RUBRO_DESCRIPCION = M.PRODUCTO_RUBRO_DESCRIPCION
		JOIN REINUS.Subrubro S ON S.PRODUCTO_SUB_RUBRO = M.PRODUCTO_SUB_RUBRO AND S.RUBRO_ID = R.ID_RUBRO
		JOIN REINUS.Producto P ON P.CODIGO = M.PRODUCTO_CODIGO AND P.SUBRUBRO_ID = S.ID_SUBRUBRO
END;
GO

---------------------------------------- MIGRAR FACTURA ----------------------------------------
CREATE PROCEDURE REINUS.migrarFactura 
AS
BEGIN
    INSERT INTO REINUS.Factura (FACTURA_NUMERO, FECHA, TOTAL, USUARIO_ID)
	 SELECT
        factura.numero,
        factura.fecha,
        factura.total,
		usuario.ID_USUARIO
    FROM (
        SELECT DISTINCT
            m.FACTURA_NUMERO as numero,
            m.FACTURA_FECHA as fecha,
            m.FACTURA_TOTAL as total,
            m.PUBLICACION_CODIGO as publicacion_codigo
        FROM gd_esquema.Maestra m
        WHERE m.FACTURA_NUMERO IS NOT NULL
    ) factura

	JOIN REINUS.Publicacion publicacion ON publicacion.CODIGO = factura.publicacion_codigo
    JOIN REINUS.Vendedor vendedor ON vendedor.ID_VENDEDOR = publicacion.VENDEDOR_ID
    JOIN REINUS.Usuario usuario ON usuario.ID_USUARIO = vendedor.ID_USUARIO

	ORDER BY factura.numero
END 
GO

---------------------------------------- MIGRAR DETALLE DE FACTURA ----------------------------------------
CREATE PROCEDURE REINUS.migrarDetalleFactura
AS 
BEGIN
    INSERT INTO REINUS.Detalle_Factura (FACTURA_ID, CONCEPTO_ID, PRECIO, CANTIDAD, SUBTOTAL, PUBLICACION_ID)
    SELECT DISTINCT
	    F.FACTURA_ID,
        C.CONCEPTO_ID,
        M.FACTURA_DET_PRECIO,
        M.FACTURA_DET_CANTIDAD,
        M.FACTURA_DET_SUBTOTAL,
		P.ID_PUBLICACION
    FROM 
        gd_esquema.Maestra M
    JOIN REINUS.Factura F ON F.FACTURA_NUMERO = M.FACTURA_NUMERO
    
	JOIN REINUS.Concepto C ON C.FACTURA_DET_TIPO = M.FACTURA_DET_TIPO
	
	JOIN REINUS.Publicacion P ON P.CODIGO = M.PUBLICACION_CODIGO

    WHERE 
        M.FACTURA_DET_CANTIDAD IS NOT NULL
END 
GO

---------------------------------------- MIGRACIÓN TIPO ENVIOS ----------------------------------------
CREATE PROCEDURE REINUS.migrarTipoEnvio
AS 
BEGIN
INSERT INTO REINUS.Tipo_Envio
SELECT ENVIO_TIPO
FROM gd_esquema.Maestra M
WHERE ENVIO_TIPO IS NOT NULL
GROUP BY ENVIO_TIPO
END 
GO

---------------------------------------- MIGRACIÓN ENVIOS ----------------------------------------
CREATE PROCEDURE REINUS.migrarEnvio
AS
BEGIN
INSERT INTO REINUS.Envio (FECHA_PROGRAMADA, DOMICILIO_ID, HORA_INICIO, HORA_FIN_INICIO, COSTO, FECHA_ENTREGA, TIPO_ENVIO_ID )

SELECT DISTINCT M.ENVIO_FECHA_PROGAMADA,
	   D.ID_DOMICILIO,
       M.ENVIO_HORA_INICIO,
	   M.ENVIO_HORA_FIN_INICIO,
	   M.ENVIO_COSTO,
	   M.ENVIO_FECHA_ENTREGA,
	   T.TIPO_ENVIO_ID
       
FROM gd_esquema.Maestra M
	JOIN REINUS.Tipo_Envio T ON M.ENVIO_TIPO = T.TIPO

	JOIN REINUS.Domicilio D ON M.CLI_USUARIO_DOMICILIO_CP = D.CP
        AND M.CLI_USUARIO_DOMICILIO_PISO = D.PISO
        AND M.CLI_USUARIO_DOMICILIO_DEPTO = D.DEPTO
		AND M.CLI_USUARIO_DOMICILIO_CALLE = D.CALLE
        AND M.CLI_USUARIO_DOMICILIO_NRO_CALLE = D.NUM_CALLE
    JOIN 
        REINUS.Localidad LOC ON D.LOCALIDAD_ID = LOC.ID_LOCALIDAD
        AND M.CLI_USUARIO_DOMICILIO_LOCALIDAD = LOC.NOMBRE
    JOIN 
        REINUS.Provincia P ON LOC.ID_PROVINCIA = P.ID_PROVINCIA
        AND M.CLI_USUARIO_DOMICILIO_PROVINCIA = P.NOMBRE
    WHERE 
        M.ENVIO_COSTO IS NOT NULL;
END;
GO

---------------------------------------- MIGRAR VENTA ----------------------------------------
CREATE PROCEDURE REINUS.migrarVenta
AS
BEGIN
INSERT INTO REINUS.Venta(CODIGO, FECHA_HORA, TOTAL, CLIENTE_ID, ENVIO_ID )
SELECT DISTINCT M.VENTA_CODIGO,
M.VENTA_FECHA,
M.VENTA_TOTAL,
C.ID_CLIENTE,
E.ENVIO_ID

FROM gd_esquema.Maestra M
LEFT JOIN REINUS.Cliente C ON M.CLIENTE_NOMBRE = C.NOMBRE AND M.CLIENTE_APELLIDO = C.APELLIDO AND M.CLIENTE_DNI = C.DNI
LEFT JOIN REINUS.Tipo_Envio T ON M.ENVIO_TIPO = T.TIPO

LEFT JOIN REINUS.Envio E ON 
    E.TIPO_ENVIO_ID = T.TIPO_ENVIO_ID
    AND E.COSTO = M.ENVIO_COSTO
	AND E.FECHA_PROGRAMADA = M.ENVIO_FECHA_PROGAMADA
    AND E.HORA_INICIO = M.ENVIO_HORA_INICIO
    AND E.HORA_FIN_INICIO = M.ENVIO_HORA_FIN_INICIO
    AND E.FECHA_ENTREGA = M.ENVIO_FECHA_ENTREGA

WHERE M.VENTA_CODIGO IS NOT NULL AND M.ENVIO_COSTO IS NOT NULL;
END
GO

---------------------------------------- MIGRAR DETALLE VENTA ----------------------------------------
CREATE PROCEDURE REINUS.MigrarDetalleVenta
AS
BEGIN
INSERT INTO REINUS.Detalle_Venta(CANT, PRECIO, SUBTOTAL, VENTA_ID, PUBLICACION_ID)
SELECT DISTINCT M.VENTA_DET_CANT,
M.VENTA_DET_PRECIO,
M.VENTA_DET_SUB_TOTAL,
V.ID_VENTA,
P.ID_PUBLICACION

FROM gd_esquema.Maestra M
JOIN REINUS.Venta V ON V.CODIGO = M.VENTA_CODIGO
JOIN REINUS.Publicacion P ON P.CODIGO = M.PUBLICACION_CODIGO

WHERE M.VENTA_DET_CANT IS NOT NULL AND M.VENTA_DET_PRECIO IS NOT NULL AND M.VENTA_DET_SUB_TOTAL IS NOT NULL;
END
GO

---------------------------------------- MIGRAR DETALLE PAGO ----------------------------------------
CREATE PROCEDURE REINUS.Migrar_Detalle_Pago
AS
BEGIN
    INSERT INTO REINUS.Detalle_Pago (NRO_TARJETA, FECHA_VENC_TARJETA, CANT_CUOTAS)
    SELECT DISTINCT 
		M.PAGO_NRO_TARJETA as NRO_TARJETA,
        M. PAGO_FECHA_VENC_TARJETA as FECHA_VENC_TARJETA,
		M.PAGO_CANT_CUOTAS as CANT_CUOTAS
    FROM gd_esquema.Maestra M
    WHERE m.PAGO_NRO_TARJETA  IS NOT NULL
END
GO

---------------------------------------- MIGRAR MEDIO PAGO ----------------------------------------
CREATE PROCEDURE REINUS.Migrar_MedioPago
AS
BEGIN
    INSERT INTO REINUS.MedioPago(MEDIO_PAGO, TIPO_MEDIO_PAGO)
	SELECT DISTINCT 
	M.PAGO_MEDIO_PAGO AS MEDIO_PAGO,
	M.PAGO_TIPO_MEDIO_PAGO AS TIPO_MEDIO_PAGO
	FROM gd_esquema.Maestra M

WHERE PAGO_MEDIO_PAGO IS NOT NULL AND PAGO_TIPO_MEDIO_PAGO IS NOT NULL

END
GO

---------------------------------------- MIGRAR PAGO ----------------------------------------
CREATE PROCEDURE REINUS.MigrarPago
AS
BEGIN
    INSERT INTO REINUS.Pago(IMPORTE, FECHA, VENTA_ID, DETALLE_PAGO_ID, MEDIO_PAGO_ID)
    SELECT DISTINCT 
		M.PAGO_IMPORTE,
        M.PAGO_FECHA,
		V.ID_VENTA,
		D.ID_DETALLE_PAGO,
		P.ID_MEDIO_PAGO
    FROM gd_esquema.Maestra M

	JOIN REINUS.Venta V ON V.CODIGO = M.VENTA_CODIGO
	JOIN REINUS.Detalle_Pago D ON D.NRO_TARJETA = M.PAGO_NRO_TARJETA
	JOIN REINUS.MedioPago P ON P.MEDIO_PAGO = M.PAGO_MEDIO_PAGO

    WHERE M.PAGO_IMPORTE IS NOT NULL
END
GO

---------------------------------------- Ejecucion procedures ----------------------------------------
EXEC REINUS.migrar_provincia
EXEC REINUS.migrar_Localidad
EXEC REINUS.migrar_usuarios
EXEC REINUS.migrarCliente
EXEC REINUS.Migrar_Vendedor
EXEC REINUS.Migrar_Domicilio
EXEC REINUS.migrar_almacen
EXEC REINUS.migrar_rubro
EXEC REINUS.migrar_subrubro
EXEC REINUS.migrar_marca
EXEC REINUS.migrar_modelo
EXEC REINUS.migrar_producto
EXEC REINUS.migrarPublicacion
EXEC REINUS.migrarTipoEnvio
EXEC REINUS.migrarEnvio
EXEC REINUS.migrarVenta
EXEC REINUS.migrarDetalleVenta
EXEC REINUS.Migrar_Detalle_Pago
EXEC REINUS.Migrar_MedioPago
EXEC REINUS.MigrarPago
EXEC REINUS.migrarFactura
EXEC REINUS.migrarConcepto
EXEC REINUS.migrarDetalleFactura
EXEC REINUS.migrar_producto

---------------------------------------- ELiminacion procedures ----------------------------------------
IF OBJECT_ID('REINUS.migrar_provincia','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_provincia
GO

IF OBJECT_ID('REINUS.migrar_Localidad','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_Localidad
GO

IF OBJECT_ID('REINUS.Migrar_Domicilio','P') IS NOT NULL
DROP PROCEDURE REINUS.Migrar_Domicilio
GO

IF OBJECT_ID('REINUS.migrarCliente','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarCliente
GO

IF OBJECT_ID('REINUS.Migrar_Vendedor','P') IS NOT NULL
DROP PROCEDURE REINUS.Migrar_Vendedor
GO

IF OBJECT_ID('REINUS.migrar_usuarios','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_usuarios
GO

IF OBJECT_ID('REINUS.migrar_almacen','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_almacen
GO

IF OBJECT_ID('REINUS.migrarConcepto','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarConcepto
GO

IF OBJECT_ID('REINUS.migrar_marca','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_marca
GO

IF OBJECT_ID('REINUS.migrar_modelo','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_modelo
GO

IF OBJECT_ID('REINUS.migrar_rubro','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_rubro
GO

IF OBJECT_ID('REINUS.migrar_subrubro','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_subrubro
GO

IF OBJECT_ID('REINUS.migrar_producto','P') IS NOT NULL
DROP PROCEDURE REINUS.migrar_producto
GO

IF OBJECT_ID('REINUS.migrarPublicacion','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarPublicacion
GO

IF OBJECT_ID('REINUS.migrarFactura','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarFactura
GO

IF OBJECT_ID('REINUS.migrarDetalleFactura','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarDetalleFactura
GO

IF OBJECT_ID('REINUS.migrarTipoEnvio','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarTipoEnvio
GO

IF OBJECT_ID('REINUS.migrarEnvio','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarEnvio
GO

IF OBJECT_ID('REINUS.migrarVenta','P') IS NOT NULL
DROP PROCEDURE REINUS.migrarVenta
GO

IF OBJECT_ID('REINUS.MigrarDetalleVenta','P') IS NOT NULL
DROP PROCEDURE REINUS.MigrarDetalleVenta
GO

IF OBJECT_ID('REINUS.Migrar_Detalle_Pago','P') IS NOT NULL
DROP PROCEDURE REINUS.Migrar_Detalle_Pago
GO

IF OBJECT_ID('REINUS.Migrar_MedioPago','P') IS NOT NULL
DROP PROCEDURE REINUS.Migrar_MedioPago
GO

IF OBJECT_ID('REINUS.MigrarPago','P') IS NOT NULL
DROP PROCEDURE REINUS.MigrarPago
GO
------------------------------------------------------------------------------------------------------------------------