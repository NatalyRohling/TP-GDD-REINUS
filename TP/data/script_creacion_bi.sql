

USE GD2C2024
GO


------------ Eliminación de funciones    ------------------
IF OBJECT_ID('REINUS.CALCULAR_TURNO') IS NOT NULL
DROP FUNCTION REINUS.CALCULAR_TURNO

IF OBJECT_ID('REINUS.CALCULAR_HORARIO') IS NOT NULL
DROP FUNCTION REINUS.CALCULAR_HORARIO
GO
IF OBJECT_ID('REINUS.CALCULAR_RANGO_ETARIO') IS NOT NULL
DROP FUNCTION REINUS.CALCULAR_RANGO_ETARIO
GO
IF OBJECT_ID('REINUS.CALCULAR_FECHA') IS NOT NULL
DROP FUNCTION REINUS.CALCULAR_FECHA
GO

------------ Eliminación de procedures    ------------------
IF OBJECT_ID('REINUS.BI_MIGRAR_RANGO_ETARIO','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_RANGO_ETARIO

IF OBJECT_ID('REINUS.BI_MIGRAR_TURNOS','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_TURNOS

IF OBJECT_ID('REINUS.BI_MIGRAR_UBICACION','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_UBICACION

IF OBJECT_ID('REINUS.BI_MIGRAR_SUCURSAL','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_SUCURSAL

IF OBJECT_ID('REINUS.BI_MIGRAR_TIEMPO','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_TIEMPO

IF OBJECT_ID('REINUS.BI_MIGRAR_VENTAS','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_VENTAS

IF OBJECT_ID('REINUS.BI_MIGRAR_MEDIO_PAGO','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_MEDIO_PAGO

IF OBJECT_ID('REINUS.BI_MIGRAR_VENTA','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_VENTA
GO

IF OBJECT_ID('REINUS.BI_MIGRAR_PAGO','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_PAGO
GO

IF OBJECT_ID('REINUS.BI_MIGRAR_ENVIOS','P') IS NOT NULL
DROP PROCEDURE  REINUS.BI_MIGRAR_ENVIO
GO

------------ Eliminación de views ------------------
IF OBJECT_ID('REINUS.VIEW_1','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_1
GO

IF OBJECT_ID('REINUS.VIEW_2','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_2
GO

IF OBJECT_ID('REINUS.VIEW_3','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_3
GO

IF OBJECT_ID('REINUS.VIEW_4','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_4
GO

IF OBJECT_ID('REINUS.VIEW_5','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_5
GO

IF OBJECT_ID('REINUS.VIEW_6','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_6
GO

IF OBJECT_ID('REINUS.VIEW_7','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_7
GO

IF OBJECT_ID('REINUS.VIEW_8','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_8
GO

IF OBJECT_ID('REINUS.VIEW_9','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_9
GO

IF OBJECT_ID('REINUS.VIEW_10','V') IS NOT NULL
DROP VIEW  REINUS.VIEW_10
GO

IF OBJECT_ID('REINUS.BI_VENTAS','U') IS NOT NULL
    DROP TABLE REINUS.BI_VENTAS;

IF OBJECT_ID('REINUS.BI_PUBLICACION','U') IS NOT NULL
    DROP TABLE REINUS.BI_PUBLICACION;

IF OBJECT_ID('REINUS.BI_FACTURA','U') IS NOT NULL
    DROP TABLE REINUS.BI_FACTURA;

IF OBJECT_ID('REINUS.BI_ENVIO','U') IS NOT NULL
    DROP TABLE REINUS.BI_ENVIO;

IF OBJECT_ID('REINUS.BI_PAGO','U') IS NOT NULL
    DROP TABLE REINUS.BI_PAGO;

----------------------------------------------------------------
IF OBJECT_ID('REINUS.BI_CONCEPTO','U') IS NOT NULL
    DROP TABLE REINUS.BI_CONCEPTO;

IF OBJECT_ID('REINUS.BI_TIEMPO','U') IS NOT NULL
    DROP TABLE REINUS.BI_TIEMPO;

IF OBJECT_ID('REINUS.BI_MARCA','U') IS NOT NULL
    DROP TABLE REINUS.BI_MARCA;

IF OBJECT_ID('REINUS.BI_TIPO_ENVIO','U') IS NOT NULL
    DROP TABLE REINUS.BI_TIPO_ENVIO

IF OBJECT_ID('REINUS.BI_RANGO_ETARIO','U') IS NOT NULL
    DROP TABLE REINUS.BI_RANGO_ETARIO;

IF OBJECT_ID('REINUS.BI_RANGO_HORARIO','U') IS NOT NULL
    DROP TABLE REINUS.BI_RANGO_HORARIO;

IF OBJECT_ID('REINUS.BI_UBICACION','U') IS NOT NULL
    DROP TABLE REINUS.BI_UBICACION;
GO

IF OBJECT_ID('REINUS.BI_TIPO_MEDIO_PAGO','U') IS NOT NULL
    DROP TABLE REINUS.BI_TIPO_MEDIO_PAGO;
	GO

IF OBJECT_ID('REINUS.BI_RUBRO','U') IS NOT NULL
    DROP TABLE REINUS.BI_RUBRO;
GO

IF OBJECT_ID('REINUS.BI_SUBRUBRO','U') IS NOT NULL
    DROP TABLE REINUS.BI_SUBRUBRO;
GO


---------------------------------------- DIMENSIONES ----------------------------------------
CREATE TABLE REINUS.BI_RANGO_HORARIO(
ID_RANGO_HORARIO INTEGER IDENTITY(1,1) NOT NULL,
RANGO_HORARIO_DESCRIPCION NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_RANGO_ETARIO(
ID_RANGO_ETARIO INTEGER IDENTITY(1,1) NOT NULL,
RANGO_ETARIO_DESCRIPCION NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_MARCA (
    ID_MARCA INTEGER IDENTITY(1,1) NOT NULL,
    DESCRIPCION NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_RUBRO(
   ID_RUBRO INTEGER IDENTITY(1,1) NOT NULL,
   PRODUCTO_RUBRO_DESCRIPCION  NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_SUBRUBRO(
   ID_SUBRUBRO INTEGER IDENTITY(1,1) NOT NULL,
   PRODUCTO_SUB_RUBRO NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_TIEMPO(
    ID_TIEMPO INTEGER  IDENTITY(1,1) NOT NULL,
    TIEMPO_ANIO SMALLINT ,
    TIEMPO_CUATRIMESTRE SMALLINT ,
    TIEMPO_MES SMALLINT 
)
GO

CREATE TABLE REINUS.BI_TIPO_ENVIO
(
ID_TIPO_ENVIO INTEGER IDENTITY(1,1) NOT NULL,
TIPO NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_TIPO_MEDIO_PAGO(
ID_TIPO_MEDIO_PAGO INTEGER IDENTITY(1,1) NOT NULL, 
MEDIO_PAGO NVARCHAR(50),
TIPO_MEDIO_PAGO NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_UBICACION(
   ID_UBICACION INTEGER IDENTITY(1,1) NOT NULL,
    UBICACION_PROVINCIA NVARCHAR(50),
    UBICACION_LOCALIDAD NVARCHAR(50)
)
GO

CREATE TABLE REINUS.BI_CONCEPTO (
    ID_CONCEPTO INTEGER    IDENTITY(1,1) NOT NULL,
    TIPO NVARCHAR(50)
)
GO

---------------------------------------- HECHOS ----------------------------------------
CREATE TABLE REINUS.BI_VENTA(
ID_VENTA INTEGER IDENTITY(1,1) NOT NULL,
 VENTA_RANGO_HORARIO INTEGER ,
 VENTA_TIPO_MEDIO_PAGO INTEGER,
 VENTA_RANGO_ETARIO_CLIENTE INTEGER,
 VENTA_UBICACION_CLIENTE INTEGER ,
 VENTA_UBICACION_ALMACEN INTEGER ,
 VENTA_TIEMPO INTEGER,
 VENTA_RUBRO INTEGER,
 VENTA_SUBRUBRO INTEGER,
 VENT_MONTO DECIMAL(18, 2)
)

CREATE TABLE REINUS.BI_PAGO(
  ID_PAGO INTEGER IDENTITY(1,1) NOT NULL,
  PAGO_UBICACION INTEGER,
  PAGO_TIEMPO INTEGER,
  PAGO_TIPO_MEDIO_PAGO INTEGER,
  PAGO_TOTAL_CUOTAS DECIMAL(18,2),
  PAGO_TOTAL_SIN_CUOTAS DECIMAL(18,2),
)
 
CREATE TABLE REINUS.BI_PUBLICACION(
  ID_PUBLICACION INTEGER IDENTITY(1,1) NOT NULL,
  PUBLICACION_SUBRUBRO INTEGER,
  PUBLICACION_RUBRO INTEGER ,
  PUBLICACION_TIEMPO INTEGER,
  FECHA_INICIO DATE,
  FECHA_FIN DATE,
  STOCK_INICIAL INTEGER,
  PUBLICACION_MARCA INTEGER
)

CREATE TABLE REINUS.BI_ENVIO(
ID_ENVIO INTEGER IDENTITY(1,1) NOT NULL,
ENVIO_UBICACION INTEGER,
ENVIO_TIPO_ENVIO INTEGER,
ENVIO_TIEMPO INTEGER,
ENVIO_COSTO DECIMAL(18,2) NOT NULL,
ENTREGA BIT
)

CREATE TABLE REINUS.BI_FACTURA(
    ID_FACTURA INTEGER  IDENTITY(1,1) NOT NULL,
    FACTURA_TIEMPO INTEGER ,
    FACTURA_UBICACION INTEGER ,
    CONCEPTO_ID INTEGER,
	TOTAL_FACTURADO DECIMAL(18,2)
)

GO

---------------------------------------- PRIMARY KEYS ----------------------------------------
ALTER TABLE REINUS.BI_RANGO_ETARIO
ADD CONSTRAINT PK_BI_RANGO_ETARIO PRIMARY KEY (ID_RANGO_ETARIO);

ALTER TABLE REINUS.BI_MARCA
ADD CONSTRAINT PK_BI_MARCA PRIMARY KEY (ID_MARCA);

ALTER TABLE REINUS.BI_CONCEPTO
ADD CONSTRAINT PK_BI_CONCEPTO PRIMARY KEY (ID_CONCEPTO);

ALTER TABLE REINUS.BI_RANGO_HORARIO
ADD CONSTRAINT PK_BI_RANGO_HORARIO PRIMARY KEY (ID_RANGO_HORARIO);

ALTER TABLE REINUS.BI_SUBRUBRO
ADD CONSTRAINT PK_BI_SUBRUBRO PRIMARY KEY (ID_SUBRUBRO);

ALTER TABLE REINUS.BI_RUBRO
ADD CONSTRAINT PK_BI_RUBRO PRIMARY KEY (ID_RUBRO);

ALTER TABLE REINUS.BI_UBICACION
ADD CONSTRAINT PK_BI_UBICACION PRIMARY KEY (ID_UBICACION);

ALTER TABLE REINUS.BI_TIEMPO
ADD CONSTRAINT PK_BI_TIEMPO PRIMARY KEY (ID_TIEMPO);

ALTER TABLE REINUS.BI_TIPO_MEDIO_PAGO
ADD CONSTRAINT PK_BI_TIPO_MEDIO_PAGO PRIMARY KEY (ID_TIPO_MEDIO_PAGO);

ALTER TABLE REINUS.BI_TIPO_ENVIO
ADD CONSTRAINT PK_BI_TIPO_ENVIO PRIMARY KEY (ID_TIPO_ENVIO);

ALTER TABLE REINUS.BI_PUBLICACION
ADD CONSTRAINT PK_BI_PUBLICACION PRIMARY KEY (ID_PUBLICACION);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT PK_BI_VENTA PRIMARY KEY (ID_VENTA);

ALTER TABLE REINUS.BI_FACTURA
ADD CONSTRAINT PK_BI_FACTURA PRIMARY KEY (ID_FACTURA);

ALTER TABLE REINUS.BI_ENVIO
ADD CONSTRAINT PK_BI_ENVIO PRIMARY KEY (ID_ENVIO);

ALTER TABLE REINUS.BI_PAGO
ADD CONSTRAINT PK_BI_PAGO PRIMARY KEY (ID_PAGO);

---------------------------------------- FOREIGN KEYS ----------------------------------------
-------------------- VENTA
ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENT_RANGO_ETARIO
FOREIGN KEY (VENTA_RANGO_ETARIO_CLIENTE) REFERENCES REINUS.BI_RANGO_ETARIO(ID_RANGO_ETARIO);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENT_RANGO_HORARIO
FOREIGN KEY (VENTA_RANGO_HORARIO) REFERENCES REINUS.BI_RANGO_HORARIO(ID_RANGO_HORARIO);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENTA_TIEMPO
FOREIGN KEY (VENTA_TIEMPO) REFERENCES REINUS.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENTA_TIPO_MEDIO_PAGO
FOREIGN KEY (VENTA_TIPO_MEDIO_PAGO) REFERENCES REINUS.BI_TIPO_MEDIO_PAGO(ID_TIPO_MEDIO_PAGO);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENTA_SUBRUBRO
FOREIGN KEY (VENTA_SUBRUBRO) REFERENCES REINUS.BI_SUBRUBRO(ID_SUBRUBRO);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENTA_RUBRO
FOREIGN KEY (VENTA_RUBRO) REFERENCES REINUS.BI_RUBRO(ID_RUBRO);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENTA_UBICACION_CLIENTE
FOREIGN KEY (VENTA_UBICACION_CLIENTE) REFERENCES REINUS.BI_UBICACION(ID_UBICACION);

ALTER TABLE REINUS.BI_VENTA
ADD CONSTRAINT FK_VENTA_UBICACION_ALMACEN
FOREIGN KEY (VENTA_UBICACION_ALMACEN) REFERENCES REINUS.BI_UBICACION(ID_UBICACION);

-------------------- PUBLICACIÓN
ALTER TABLE REINUS.BI_PUBLICACION
ADD CONSTRAINT FK_PUBLICACION_SUBRUBRO
FOREIGN KEY (PUBLICACION_SUBRUBRO) REFERENCES REINUS.BI_SUBRUBRO(ID_SUBRUBRO);

ALTER TABLE REINUS.BI_PUBLICACION
ADD CONSTRAINT FK_PUBLICACION_RUBRO
FOREIGN KEY (PUBLICACION_RUBRO) REFERENCES REINUS.BI_RUBRO(ID_RUBRO);

ALTER TABLE REINUS.BI_PUBLICACION
ADD CONSTRAINT FK_PUBLICACION_TIEMPO
FOREIGN KEY (PUBLICACION_TIEMPO) REFERENCES REINUS.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE REINUS.BI_PUBLICACION
ADD CONSTRAINT FK_PUBLICACION_MARCA
FOREIGN KEY (PUBLICACION_MARCA) REFERENCES REINUS.BI_MARCA(ID_MARCA);

-------------------- ENVIO
ALTER TABLE REINUS.BI_ENVIO
ADD CONSTRAINT FK_ENVIO_TIEMPO
FOREIGN KEY (ENVIO_TIEMPO) REFERENCES REINUS.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE REINUS.BI_ENVIO
ADD CONSTRAINT FK_ENVIO_TIPO_ENVIO
FOREIGN KEY (ENVIO_TIPO_ENVIO) REFERENCES REINUS.BI_TIPO_ENVIO(ID_TIPO_ENVIO);

ALTER TABLE REINUS.BI_ENVIO
ADD CONSTRAINT FK_ENVIO_UBICACION
FOREIGN KEY (ENVIO_UBICACION) REFERENCES REINUS.BI_UBICACION(ID_UBICACION);

-------------------- FACTURA
ALTER TABLE REINUS.BI_FACTURA
ADD CONSTRAINT FK_FACTURA_UBICACION
FOREIGN KEY (FACTURA_UBICACION) REFERENCES REINUS.BI_UBICACION(ID_UBICACION);

ALTER TABLE REINUS.BI_FACTURA
ADD CONSTRAINT FK_FACTURA_TIEMPO
FOREIGN KEY (FACTURA_TIEMPO) REFERENCES REINUS.BI_TIEMPO(ID_TIEMPO);

ALTER TABLE REINUS.BI_FACTURA
ADD CONSTRAINT FK_FACTURA_CONCEPTO
FOREIGN KEY (CONCEPTO_ID) REFERENCES REINUS.BI_CONCEPTO(ID_CONCEPTO);
-------------------- PAGO
ALTER TABLE REINUS.BI_PAGO
ADD CONSTRAINT FK_PAGO_UBICACION
FOREIGN KEY (PAGO_UBICACION) REFERENCES REINUS.BI_UBICACION(ID_UBICACION);

ALTER TABLE REINUS.BI_PAGO
ADD CONSTRAINT FK_PAGO_TIEMPO
FOREIGN KEY (PAGO_TIEMPO) REFERENCES REINUS.BI_TIEMPO(ID_TIEMPO);
GO

---------------------------------------- FUNCIONES ----------------------------------------
CREATE FUNCTION REINUS.CALCULAR_RANGO_ETARIO (@FECHA_NACIMIENTO DATE)
RETURNS NVARCHAR(50)
AS
BEGIN
    DECLARE @ANIOS INT = DATEDIFF(YEAR, @FECHA_NACIMIENTO, GETDATE())
    DECLARE @RES NVARCHAR(50)
    IF @ANIOS < 25
        SET @RES = 1
    ELSE
        IF @ANIOS BETWEEN 25 AND 35
            SET @RES = 2
        ELSE
            IF @ANIOS BETWEEN 35 AND 50
                SET @RES = 3
            ELSE
                IF @ANIOS > 50
                    SET @RES = 4
                ELSE
                    SET @RES = 5
    RETURN @RES
END
GO

CREATE FUNCTION REINUS.CALCULAR_HORARIO (@HORARIO DATETIME)
RETURNS NVARCHAR(50)
AS
BEGIN
    DECLARE @HORA INT = DATEPART(HOUR, @HORARIO)
    DECLARE @RES NVARCHAR(50)
    IF @HORA BETWEEN 0 AND 6
            SET @RES = '1'
        ELSE
            IF @HORA BETWEEN 6 AND 12
                SET @RES = '2'
            ELSE IF  @HORA BETWEEN 12 AND 18
                SET @RES = '3'
			ELSE
			SET @RES = '4'
				
    RETURN @RES
END
GO

CREATE FUNCTION REINUS.CALCULAR_FECHA(@FECHA DATETIME)
RETURNS SMALLINT
AS
BEGIN
DECLARE @ANIO INT
DECLARE @CUATRIMESTRE INT
DECLARE @MES INT

SELECT @ANIO = YEAR(@FECHA), @CUATRIMESTRE = DATEPART(QUARTER,@FECHA), @MES = MONTH(@FECHA)
RETURN (
    SELECT TOP 1 ID_TIEMPO FROM REINUS.BI_TIEMPO
    WHERE
        @ANIO = TIEMPO_ANIO
        AND @CUATRIMESTRE = TIEMPO_CUATRIMESTRE
        AND @MES = TIEMPO_MES
    ORDER BY ID_TIEMPO
)
END
GO

---------------------------------------- PROCEDURES MIGRACIONES ----------------------------------------
CREATE PROCEDURE REINUS.BI_MIGRAR_RANGO_ETARIO
AS
BEGIN
    INSERT INTO REINUS.BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
    VALUES ('<25')
    INSERT INTO REINUS.BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
    VALUES ('25-35')
    INSERT INTO REINUS.BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
    VALUES ('35-50')
    INSERT INTO REINUS.BI_RANGO_ETARIO(RANGO_ETARIO_DESCRIPCION)
    VALUES ('>50')
END
GO

CREATE PROCEDURE REINUS.BI_MIGRAR_RANGO_HORARIO
AS
BEGIN
    INSERT INTO REINUS.BI_RANGO_HORARIO(RANGO_HORARIO_DESCRIPCION)
    VALUES ('00:00-06:00')
    INSERT INTO REINUS.BI_RANGO_HORARIO(RANGO_HORARIO_DESCRIPCION)
    VALUES ('06:00-12:00')
    INSERT INTO REINUS.BI_RANGO_HORARIO(RANGO_HORARIO_DESCRIPCION)
    VALUES ('12:00-18:00')
    INSERT INTO REINUS.BI_RANGO_HORARIO(RANGO_HORARIO_DESCRIPCION)
    VALUES ('18:00-24:00')
END
GO

-- Migracion de TIPO ENVIO
CREATE PROCEDURE REINUS.BI_MIGRAR_TIPO_ENVIO
AS
BEGIN
    INSERT INTO REINUS.BI_TIPO_ENVIO(TIPO)
        (select  TIPO  from REINUS.Tipo_Envio)
END
GO

-- Migracion de MEDIO PAGO
CREATE PROCEDURE REINUS.BI_MIGRAR_TIPO_MEDIO_PAGO
AS
BEGIN
    INSERT INTO REINUS.BI_TIPO_MEDIO_PAGO(MEDIO_PAGO, TIPO_MEDIO_PAGO)
        (select MEDIO_PAGO, TIPO_MEDIO_PAGO from REINUS.MedioPago)
END
GO

-- Migracion de MEDIO PAGO
CREATE PROCEDURE REINUS.BI_MIGRAR_CONCEPTO
AS
BEGIN
    INSERT INTO REINUS.BI_CONCEPTO(TIPO)
        (select FACTURA_DET_TIPO from REINUS.Concepto)
END
GO

-- Migración RUBRO
CREATE PROCEDURE REINUS.BI_MIGRAR_RUBRO
AS
BEGIN
INSERT INTO REINUS.BI_RUBRO (PRODUCTO_RUBRO_DESCRIPCION)
(SELECT PRODUCTO_RUBRO_DESCRIPCION FROM REINUS.Rubro
GROUP BY PRODUCTO_RUBRO_DESCRIPCION )
END
GO

-- Migración SUBRUBRO
CREATE PROCEDURE REINUS.BI_MIGRAR_SUBRUBRO
AS
BEGIN
INSERT INTO REINUS.BI_SUBRUBRO(PRODUCTO_SUB_RUBRO)
SELECT  PRODUCTO_SUB_RUBRO FROM REINUS.Subrubro
END
GO

--MIGRAR UBICION
CREATE PROCEDURE REINUS.BI_MIGRAR_UBICACION
AS
BEGIN
    INSERT INTO REINUS.BI_UBICACION(UBICACION_PROVINCIA, UBICACION_LOCALIDAD)
    SELECT DISTINCT P.NOMBRE AS PROVINCIA, L.NOMBRE AS LOCALIDAD
    FROM REINUS.Localidad L
    JOIN REINUS.Provincia P ON P.ID_PROVINCIA = L.ID_PROVINCIA

	GROUP BY P.NOMBRE, L.NOMBRE 
END
GO

--MIGRAR TIEMPO
CREATE PROCEDURE REINUS.BI_MIGRAR_TIEMPO
AS
BEGIN
    INSERT INTO REINUS.BI_TIEMPO(TIEMPO_ANIO, TIEMPO_CUATRIMESTRE, TIEMPO_MES)
         SELECT 
		 YEAR(FECHA_PROGRAMADA) AS ANIO, DATEPART(QUARTER, FECHA_PROGRAMADA) AS CUATRIMESTRE, MONTH(FECHA_PROGRAMADA) AS MES
         FROM REINUS.Envio
         GROUP BY YEAR(FECHA_PROGRAMADA), DATEPART(QUARTER, FECHA_PROGRAMADA), MONTH(FECHA_PROGRAMADA)
         UNION
         SELECT YEAR(FECHA) AS ANIO, DATEPART(QUARTER, FECHA) AS CUATRIMESTRE, MONTH(FECHA) AS MES
         FROM REINUS.Pago
         GROUP BY YEAR(FECHA), DATEPART(QUARTER, FECHA), MONTH(FECHA)
         UNION
		 SELECT YEAR(FECHA) AS ANIO, DATEPART(QUARTER, FECHA) AS CUATRIMESTRE, MONTH(FECHA) AS MES
         FROM REINUS.Factura
         GROUP BY YEAR(FECHA), DATEPART(QUARTER, FECHA), MONTH(FECHA)
		  UNION
		 SELECT YEAR(FECHA) AS ANIO, DATEPART(QUARTER, FECHA) AS CUATRIMESTRE, MONTH(FECHA) AS MES
         FROM REINUS.Publicacion
         GROUP BY YEAR(FECHA), DATEPART(QUARTER, FECHA), MONTH(FECHA)
END
GO

---------------------------MIGRAR MARCA-----------------------------
CREATE PROCEDURE REINUS.BI_MIGRAR_MARCA
AS
BEGIN
    INSERT INTO REINUS.BI_MARCA(
	DESCRIPCION)
    SELECT DISTINCT M.MARCA FROM REINUS.Marca M;
END
GO

---------------------------MIGRAR PUBLICACION------------
CREATE PROCEDURE REINUS.BI_MIGRA_PUBLICACION
AS
BEGIN
    INSERT INTO REINUS.BI_PUBLICACION (PUBLICACION_TIEMPO, FECHA_INICIO, FECHA_FIN, STOCK_INICIAL, PUBLICACION_MARCA, PUBLICACION_SUBRUBRO, PUBLICACION_RUBRO)
    SELECT
        T.ID_TIEMPO,
		p.FECHA,
		p.FECHA_V,
		p.STOCK,
		bm.ID_MARCA,
        SR.ID_SUBRUBRO,       
        R.ID_RUBRO            

   FROM 
        REINUS.Publicacion p
    JOIN REINUS.Producto pro ON p.PRODUCTO_ID = pro.ID_PRODUCTO
    JOIN REINUS.BI_SUBRUBRO SR ON pro.SUBRUBRO_ID = SR.ID_SUBRUBRO

	JOIN REINUS.Subrubro S on pro.SUBRUBRO_ID = S.ID_SUBRUBRO
    JOIN REINUS.Rubro R ON S.RUBRO_ID = R.ID_RUBRO
	JOIN REINUS.BI_RUBRO Rub on Rub.ID_RUBRO  = R.ID_RUBRO

    JOIN REINUS.BI_TIEMPO t ON REINUS.calcular_fecha(p.FECHA) = ID_TIEMPO
	JOIN REINUS.Marca  M on pro.ID_MARCA = M.ID_MARCA
	JOIN REINUS.BI_MARCA bm on bm.ID_MARCA = M.ID_MARCA

END;
GO

-- Migración Ventas
CREATE PROCEDURE REINUS.BI_MIGRAR_VENTAS
AS
BEGIN
    INSERT INTO REINUS.BI_VENTA(
        VENTA_TIPO_MEDIO_PAGO,
        VENTA_RANGO_HORARIO,
        VENTA_RANGO_ETARIO_CLIENTE,
        VENTA_UBICACION_ALMACEN,
        VENTA_UBICACION_CLIENTE,
        VENTA_TIEMPO,
        VENTA_RUBRO,
        VENTA_SUBRUBRO,
        VENT_MONTO
    )
    SELECT 
        TipoMP.ID_TIPO_MEDIO_PAGO,
        h.ID_RANGO_HORARIO,
        et.ID_RANGO_ETARIO,
        ubi_almacen.ID_UBICACION,
        UBICACION.ID_UBICACION,
        TIEMPO.ID_TIEMPO,
        RUBRO.ID_RUBRO,
        SUBRUBRO.ID_SUBRUBRO,
        VENTA.TOTAL
    FROM REINUS.Venta VENTA
    JOIN REINUS.Cliente CLIENTE ON CLIENTE.ID_CLIENTE = VENTA.CLIENTE_ID
    JOIN REINUS.Domicilio DOMICILIO ON DOMICILIO.USUARIO_ID = CLIENTE.ID_USUARIO
    JOIN REINUS.Localidad LOCALIDAD ON LOCALIDAD.ID_LOCALIDAD = DOMICILIO.LOCALIDAD_ID
    JOIN REINUS.Provincia PROVINCIA ON PROVINCIA.ID_PROVINCIA = LOCALIDAD.ID_PROVINCIA
    JOIN REINUS.BI_UBICACION UBICACION ON UBICACION.UBICACION_LOCALIDAD = LOCALIDAD.NOMBRE 
                                        AND UBICACION.UBICACION_PROVINCIA = PROVINCIA.NOMBRE

    JOIN REINUS.BI_RANGO_HORARIO h ON REINUS.CALCULAR_HORARIO(VENTA.FECHA_HORA) = h.ID_RANGO_HORARIO
    JOIN REINUS.BI_RANGO_ETARIO et ON REINUS.CALCULAR_RANGO_ETARIO(CLIENTE.FECHA_NAC) = et.ID_RANGO_ETARIO

    JOIN REINUS.Detalle_Venta DETALLE_VENTA ON DETALLE_VENTA.VENTA_ID = VENTA.ID_VENTA
    
	JOIN REINUS.Publicacion PUBLICACION ON PUBLICACION.ID_PUBLICACION = DETALLE_VENTA.PUBLICACION_ID
	JOIN REINUS.Producto PRODUCTO ON PRODUCTO.ID_PRODUCTO = PUBLICACION.PRODUCTO_ID
    JOIN REINUS.Subrubro SUBRUBRO ON SUBRUBRO.ID_SUBRUBRO = PRODUCTO.SUBRUBRO_ID
	JOIN REINUS.Rubro RUBRO ON RUBRO.ID_RUBRO = SUBRUBRO.RUBRO_ID
    
    LEFT JOIN REINUS.Pago PAGO ON PAGO.VENTA_ID = VENTA.ID_VENTA
    LEFT JOIN REINUS.MedioPago MEDIO_PAGO ON MEDIO_PAGO.ID_MEDIO_PAGO = PAGO.MEDIO_PAGO_ID
	JOIN REINUS.BI_TIPO_MEDIO_PAGO TipoMP ON TipoMP.MEDIO_PAGO = MEDIO_PAGO.MEDIO_PAGO
    
	JOIN REINUS.Domicilio DOM_ALMACEN ON DOM_ALMACEN.ID_DOMICILIO = PUBLICACION.ALMACEN_ID
    JOIN REINUS.Localidad l_alm ON l_alm.ID_LOCALIDAD = DOM_ALMACEN.LOCALIDAD_ID
    JOIN REINUS.Provincia p_alm ON p_alm.ID_PROVINCIA = l_alm.ID_PROVINCIA
    JOIN REINUS.BI_UBICACION ubi_almacen ON ubi_almacen.UBICACION_PROVINCIA = p_alm.NOMBRE 
                                         AND ubi_almacen.UBICACION_LOCALIDAD = l_alm.NOMBRE
    
	LEFT JOIN REINUS.BI_Tiempo TIEMPO ON TIEMPO.ID_TIEMPO = REINUS.CALCULAR_FECHA(VENTA.FECHA_HORA)
END;
GO

--Migrar envio
CREATE PROCEDURE REINUS.BI_MIGRAR_ENVIO
AS
BEGIN
    INSERT INTO REINUS.BI_ENVIO (
        ENVIO_UBICACION,
        ENVIO_TIPO_ENVIO,
        ENVIO_TIEMPO,
        ENVIO_COSTO,
        ENTREGA
    )
    SELECT DISTINCT
        UBI.ID_UBICACION,        
        TE.TIPO_ENVIO_ID,                 
        BT.ID_TIEMPO,                    
        E.COSTO,                       
        E.ENTREGA 
    FROM REINUS.Envio E
    JOIN REINUS.Domicilio D ON D.ID_DOMICILIO = E.DOMICILIO_ID
    JOIN REINUS.Localidad L ON L.ID_LOCALIDAD = D.LOCALIDAD_ID
    JOIN REINUS.Provincia P ON P.ID_PROVINCIA = L.ID_PROVINCIA
    JOIN REINUS.BI_UBICACION UBI ON 
        UBI.UBICACION_PROVINCIA = P.NOMBRE AND 
        UBI.UBICACION_LOCALIDAD = L.NOMBRE
    JOIN REINUS.Tipo_Envio TE ON TE.TIPO_ENVIO_ID = E.TIPO_ENVIO_ID
    JOIN REINUS.BI_TIEMPO BT ON BT.ID_TIEMPO = REINUS.CALCULAR_FECHA(FECHA_ENTREGA);
END;
GO

--Migrar factura
CREATE PROCEDURE REINUS.BI_MIGRA_FACTURA
AS
BEGIN
    INSERT INTO REINUS.BI_FACTURA (FACTURA_TIEMPO, FACTURA_UBICACION, CONCEPTO_ID, TOTAL_FACTURADO)
    SELECT DISTINCT
        T.ID_TIEMPO,         
        UB.ID_UBICACION,
		c.ID_CONCEPTO,
		f.TOTAL
    FROM 
        REINUS.Factura f
    JOIN REINUS.BI_TIEMPO T ON REINUS.calcular_fecha(f.FECHA) = ID_TIEMPO
    JOIN REINUS.Usuario u ON f.USUARIO_ID = u.ID_USUARIO
	JOIN REINUS.vendedor AS v ON v.ID_USUARIO = u.ID_USUARIO
    
	JOIN REINUS.Domicilio d ON d.USUARIO_ID = u.ID_USUARIO
    JOIN REINUS.Localidad L ON d.LOCALIDAD_ID = L.ID_LOCALIDAD
    JOIN REINUS.Provincia pro ON pro.ID_PROVINCIA = L.ID_PROVINCIA
    JOIN REINUS.BI_UBICACION UB ON UB.UBICACION_LOCALIDAD = L.NOMBRE 
                                  AND UB.UBICACION_PROVINCIA = pro.NOMBRE
	
	JOIN REINUS.Detalle_Factura df ON f.FACTURA_ID = df.FACTURA_ID
	JOIN REINUS.Concepto con ON con.CONCEPTO_ID = df.CONCEPTO_ID
    JOIN REINUS.BI_CONCEPTO AS c ON con.CONCEPTO_ID = c.ID_CONCEPTO
END
GO

EXEC REINUS.BI_MIGRA_FACTURA
--Migrar pagos
CREATE PROCEDURE REINUS.BI_MIGRAR_PAGOS
AS
BEGIN
INSERT INTO REINUS.BI_PAGO(PAGO_UBICACION,PAGO_TIEMPO, PAGO_TIPO_MEDIO_PAGO, PAGO_TOTAL_CUOTAS, PAGO_TOTAL_SIN_CUOTAS)
SELECT
    ub.ID_UBICACION,
    t.ID_TIEMPO,
    mp.ID_TIPO_MEDIO_PAGO,
    ISNULL(pagos.total_con_cuotas, 0) AS total_con_cuotas,
    ISNULL(pagos.total_sin_cuotas, 0) AS total_sin_cuotas
FROM REINUS.Pago p
JOIN REINUS.Venta v ON p.VENTA_ID = v.ID_VENTA
JOIN REINUS.Cliente c ON c.ID_CLIENTE = v.CLIENTE_ID
JOIN REINUS.Domicilio d ON d.USUARIO_ID = c.ID_USUARIO
JOIN REINUS.Envio e ON e.DOMICILIO_ID = d.ID_DOMICILIO AND e.ENVIO_ID = v.ENVIO_ID
JOIN REINUS.Localidad l ON d.LOCALIDAD_ID = l.ID_LOCALIDAD
JOIN REINUS.Provincia pro ON pro.ID_PROVINCIA = l.ID_PROVINCIA
JOIN REINUS.BI_UBICACION ub ON ub.UBICACION_LOCALIDAD = l.NOMBRE AND ub.UBICACION_PROVINCIA = pro.NOMBRE
JOIN REINUS.BI_TIEMPO t ON REINUS.calcular_fecha(p.FECHA) = t.ID_TIEMPO
JOIN REINUS.MedioPago m ON m.ID_MEDIO_PAGO = p.MEDIO_PAGO_ID
JOIN REINUS.BI_TIPO_MEDIO_PAGO mp ON mp.MEDIO_PAGO = m.MEDIO_PAGO AND mp.TIPO_MEDIO_PAGO = m.TIPO_MEDIO_PAGO

JOIN (
    SELECT
        p.PAGO_ID,
        SUM(CASE WHEN det.CANT_CUOTAS > 0 THEN p.IMPORTE ELSE 0 END) AS total_con_cuotas,
        SUM(CASE WHEN det.CANT_CUOTAS = 0 THEN p.IMPORTE ELSE 0 END) AS total_sin_cuotas
    FROM REINUS.Pago p
    JOIN REINUS.Detalle_Pago det ON p.DETALLE_PAGO_ID = det.ID_DETALLE_PAGO
    GROUP BY p.PAGO_ID
) AS pagos ON p.PAGO_ID = pagos.PAGO_ID;
END
GO

exec REINUS.BI_MIGRAR_PAGOS


---------------------------------------- MIGRACIÓN ----------------------------------------
EXEC REINUS.BI_MIGRAR_RANGO_ETARIO
EXEC REINUS.BI_MIGRAR_RANGO_HORARIO
EXEC REINUS.BI_MIGRAR_TIPO_ENVIO
EXEC REINUS.BI_MIGRAR_TIPO_MEDIO_PAGO
EXEC REINUS.BI_MIGRAR_RUBRO
EXEC REINUS.BI_MIGRAR_SUBRUBRO
EXEC REINUS.BI_MIGRAR_UBICACION
EXEC REINUS.BI_MIGRAR_TIEMPO
EXEC REINUS.BI_MIGRAR_MARCA
EXEC REINUS.BI_MIGRA_PUBLICACION
EXEC REINUS.BI_MIGRA_FACTURA
EXEC REINUS.BI_MIGRAR_PAGOS
EXEC REINUS.BI_MIGRAR_VENTAS
EXEC REINUS.BI_MIGRAR_ENVIO
GO

---------------------------------------- Creacion de vistas ----------------------------------------
CREATE VIEW REINUS.VIEW_1 AS
SELECT
    S.PRODUCTO_SUB_RUBRO AS subrubro,
    t.TIEMPO_ANIO AS anio,
    t.TIEMPO_CUATRIMESTRE AS cuatrimestre,
    AVG(DATEDIFF(day, pub.FECHA_INICIO, pub.FECHA_FIN)) AS tiempo_promedio
FROM
    REINUS.BI_PUBLICACION pub
    JOIN REINUS.BI_SUBRUBRO s ON pub.PUBLICACION_SUBRUBRO = s.ID_SUBRUBRO
    JOIN REINUS.BI_TIEMPO t ON pub.PUBLICACION_TIEMPO = t.ID_TIEMPO
GROUP BY
    s.PRODUCTO_SUB_RUBRO, t.TIEMPO_ANIO, t.TIEMPO_CUATRIMESTRE;
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_2 AS
SELECT
    m.DESCRIPCION AS marca,
    T.TIEMPO_ANIO AS ANIO,
    AVG(pub.STOCK_INICIAL) AS promedio_stock_inicial
FROM
    REINUS.BI_PUBLICACION pub
    JOIN REINUS.BI_MARCA m ON pub.PUBLICACION_RUBRO = m.ID_MARCA
	INNER JOIN REINUS.BI_TIEMPO T ON pub.PUBLICACION_TIEMPO = T.ID_TIEMPO
GROUP BY m.DESCRIPCION, T.TIEMPO_ANIO
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_3 AS
SELECT
    t.TIEMPO_ANIO AS anio,
    t.TIEMPO_MES AS mes,
    u.UBICACION_PROVINCIA AS provincia,
	SUM(v.VENT_MONTO) * 100 / COUNT(v.ID_VENTA) AS VENTA_PROMEDIO_MENSUAL
FROM
    REINUS.BI_VENTA v
    JOIN REINUS.BI_UBICACION u ON v.VENTA_UBICACION_ALMACEN = u.ID_UBICACION
    JOIN REINUS.BI_TIEMPO t ON v.VENTA_TIEMPO = t.ID_TIEMPO
GROUP BY
    t.TIEMPO_ANIO, t.TIEMPO_MES, u.UBICACION_PROVINCIA;
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_4 AS
SELECT TOP 5
    T.TIEMPO_ANIO AS año,
    T.TIEMPO_CUATRIMESTRE AS cuatrimestre,
    U.UBICACION_LOCALIDAD AS localidad,
    RANGO.RANGO_ETARIO_DESCRIPCION AS rango_etario,
    R.PRODUCTO_RUBRO_DESCRIPCION AS rubro,
    SUM(V.VENT_MONTO) AS total_ventas
FROM 
    REINUS.BI_VENTA V
JOIN REINUS.BI_TIEMPO T ON V.VENTA_TIEMPO = T.ID_TIEMPO
JOIN REINUS.BI_UBICACION U ON V.VENTA_UBICACION_CLIENTE = U.ID_UBICACION
JOIN REINUS.BI_RANGO_ETARIO RANGO ON V.VENTA_RANGO_ETARIO_CLIENTE = RANGO.ID_RANGO_ETARIO
JOIN REINUS.BI_RUBRO R ON V.VENTA_RUBRO = R.ID_RUBRO
GROUP BY 
    T.TIEMPO_ANIO, 
    T.TIEMPO_CUATRIMESTRE, 
    U.UBICACION_LOCALIDAD, 
    RANGO.RANGO_ETARIO_DESCRIPCION, 
    R.PRODUCTO_RUBRO_DESCRIPCION
ORDER BY 
    SUM(V.VENT_MONTO) DESC;
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_5 AS
SELECT BI.RANGO_HORARIO_DESCRIPCION,
       TIEMPO_ANIO,
       TIEMPO_MES,
       COUNT(V.ID_VENTA) AS CANTIDAD_VENTAS
FROM REINUS.BI_VENTA V
         JOIN REINUS.BI_TIEMPO T ON T.ID_TIEMPO = V.VENTA_TIEMPO
         JOIN REINUS.BI_RANGO_HORARIO BI ON BI.ID_RANGO_HORARIO = V.VENTA_RANGO_HORARIO
GROUP BY  BI.RANGO_HORARIO_DESCRIPCION, TIEMPO_ANIO, TIEMPO_MES
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_6 AS
SELECT TOP 3
    UBI.UBICACION_LOCALIDAD,
    SUM(B.PAGO_TOTAL_CUOTAS) AS IMPORTE_TOTAL_DE_CUOTAS,
    M.TIPO_MEDIO_PAGO,
    T.TIEMPO_MES,
    T.TIEMPO_ANIO
FROM REINUS.BI_PAGO B

JOIN REINUS.BI_TIEMPO T ON T.ID_TIEMPO = B.PAGO_TIEMPO
JOIN REINUS.BI_TIPO_MEDIO_PAGO M ON M.ID_TIPO_MEDIO_PAGO = B.PAGO_TIPO_MEDIO_PAGO

JOIN REINUS.Pago P ON p.PAGO_ID = B.ID_PAGO
JOIN REINUS.Venta V ON v.ID_VENTA = P.VENTA_ID
JOIN REINUS.Cliente C ON C.ID_CLIENTE = V.CLIENTE_ID
JOIN REINUS.Usuario U ON U.ID_USUARIO = C.ID_USUARIO
JOIN REINUS.Domicilio D ON D.USUARIO_ID = U.ID_USUARIO
JOIN REINUS.Envio E ON E.DOMICILIO_ID = D.ID_DOMICILIO
JOIN REINUS.localidad AS L ON L.ID_LOCALIDAD = D.LOCALIDAD_ID
JOIN REINUS.provincia AS Prov ON Prov.ID_PROVINCIA = L.ID_PROVINCIA
JOIN REINUS.BI_UBICACION AS UBI ON 
        UBI.UBICACION_LOCALIDAD = L.NOMBRE AND 
        UBI.UBICACION_PROVINCIA = Prov.NOMBRE

GROUP BY UBI.UBICACION_LOCALIDAD, M.TIPO_MEDIO_PAGO, T.TIEMPO_MES, T.TIEMPO_ANIO
ORDER BY IMPORTE_TOTAL_DE_CUOTAS DESC;
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_7 AS
SELECT 
    U.UBICACION_PROVINCIA AS provincia,
    T.TIEMPO_ANIO AS año,
    T.TIEMPO_MES AS mes,
    (
        (
            SELECT COUNT(*) 
            FROM REINUS.BI_ENVIO E2
            JOIN REINUS.BI_TIEMPO T2 
                ON E2.ENVIO_TIEMPO = T2.ID_TIEMPO
            WHERE 
                T2.TIEMPO_ANIO = T.TIEMPO_ANIO
                AND T2.TIEMPO_MES = T.TIEMPO_MES
                AND U.ID_UBICACION = E2.ENVIO_UBICACION
                AND E2.ENTREGA = 1
        ) * 100.0 / COUNT(E1.ID_ENVIO)
    ) AS porcentaje_cumplimiento
FROM 
    REINUS.BI_ENVIO E1
JOIN 
    REINUS.BI_UBICACION U 
    ON E1.ENVIO_UBICACION = U.ID_UBICACION
JOIN 
    REINUS.BI_TIEMPO T 
    ON E1.ENVIO_TIEMPO = T.ID_TIEMPO
GROUP BY 
    U.UBICACION_PROVINCIA, 
    T.TIEMPO_ANIO, 
    T.TIEMPO_MES, 
    U.ID_UBICACION;
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_8 AS
SELECT TOP 5 UBI.UBICACION_LOCALIDAD,
E.ENVIO_COSTO
FROM REINUS.BI_ENVIO E
JOIN REINUS.BI_UBICACION UBI ON E.ENVIO_UBICACION = UBI.ID_UBICACION
ORDER BY E.ENVIO_COSTO desc
GO 

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_9 AS
SELECT 
    T.TIEMPO_ANIO AS ANIO,
    T.TIEMPO_MES AS MES,
    C.TIPO AS CONCEPTO,
    (SUM(DF.SUBTOTAL) * 100.0 / TotalMes.TotalMesFacturado) AS PORCENTAJE_FACTURACION
FROM REINUS.BI_FACTURA F
JOIN REINUS.BI_TIEMPO T ON F.FACTURA_TIEMPO = T.ID_TIEMPO
JOIN REINUS.BI_CONCEPTO C ON F.CONCEPTO_ID = C.ID_CONCEPTO
JOIN REINUS.Detalle_Factura DF ON DF.FACTURA_ID = F.ID_FACTURA
JOIN (
    SELECT 
        T.TIEMPO_ANIO, 
        T.TIEMPO_MES, 
        SUM(F.TOTAL_FACTURADO) AS TotalMesFacturado
    FROM REINUS.BI_FACTURA F
    JOIN REINUS.BI_TIEMPO T ON F.FACTURA_TIEMPO = T.ID_TIEMPO
    GROUP BY T.TIEMPO_ANIO, T.TIEMPO_MES
) AS TotalMes ON TotalMes.TIEMPO_ANIO = T.TIEMPO_ANIO AND TotalMes.TIEMPO_MES = T.TIEMPO_MES
GROUP BY 
    T.TIEMPO_ANIO, 
    T.TIEMPO_MES, 
    C.TIPO, 
    TotalMes.TotalMesFacturado;
GO

----------------------------------------------------------------------------------------------------

CREATE VIEW REINUS.VIEW_10 AS
SELECT 
    U.UBICACION_PROVINCIA AS PROVINCIA,
    T.TIEMPO_ANIO AS ANIO,
    T.TIEMPO_CUATRIMESTRE AS CUATRIMESTRE,
    SUM(F.TOTAL_FACTURADO) AS MONTO_FACTURADO
FROM REINUS.BI_FACTURA F
JOIN REINUS.BI_UBICACION U ON F.FACTURA_UBICACION = U.ID_UBICACION
JOIN REINUS.BI_TIEMPO T ON F.FACTURA_TIEMPO = T.ID_TIEMPO
GROUP BY U.UBICACION_PROVINCIA, T.TIEMPO_ANIO, T.TIEMPO_CUATRIMESTRE;
GO

